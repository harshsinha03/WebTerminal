{"version":3,"sources":["commands/basic.js","commands/files.js","lib/fs.js","commands/counter.service.js","commands/index.js","components/terminal.jsx","App.js","index.js"],"names":["pwdv","file","this","path","fs","level","root","contents","_","find","dir","dr","includes","d","push","currentDir","counterService","commandCounter","commands","taskStatus","index","context","counter","b","help","echo","getStatus","text","setStatusTrue","pwd","pwdvNew","join","replace","split","uname","navigator","appVersion","indexOf","date","Date","basic","f","ls","getPath","cd","arg","changeDir","mkdir","intro","prompt","greetings","onBlur","Terminal","$el","$","el","terminal","style","display","position","width","ref","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.207e6e09.chunk.js","sourcesContent":["var pwdv = [\"imabp\"]  // To print pwd \r\n\r\nlet basic = (context,counter) => {\r\n    \r\n    return {\r\n        help: () => {\r\n\r\n            context.echo(\"Hello\")\r\n            context.echo('\\nList of commands available:');\r\n            context.echo('===========================\\n');\r\n            context.echo('> [[b;#44D544;]about]');\r\n            context.echo('> [[b;#44D544;]contribute]');\r\n            context.echo('> echo ----------- ' + counter.getStatus(0));\r\n            context.echo('> pwd ------------ ' + counter.getStatus(1));\r\n            context.echo('> cd ------------- ' + counter.getStatus(2));\r\n            context.echo('> cd .. ---------- ' + counter.getStatus(3));\r\n            context.echo('> ls ------------- ' + counter.getStatus(4));\r\n            context.echo('> cd ~ ----------- ' + counter.getStatus(5));\r\n            context.echo('> cat ------------ ' + counter.getStatus(6));\r\n            context.echo('> touch ---------- ' + counter.getStatus(7));\r\n            context.echo('> cp ------------- ' + counter.getStatus(8));\r\n            context.echo('> rm ------------- ' + counter.getStatus(9));\r\n            context.echo('> mkdir ---------- ' + counter.getStatus(10));\r\n            context.echo('> clear ---------- ' + counter.getStatus(11));\r\n            context.echo('> uname ---------- ' + counter.getStatus(12));\r\n            context.echo('> date  ---------- ' + counter.getStatus(13));\r\n            context.echo('> ifconfig ------- ' + counter.getStatus(14));\r\n            context.echo('> tty ------------ ' + counter.getStatus(15));\r\n            context.echo('> history -------- ' + counter.getStatus(16));\r\n            context.echo('\\n');\r\n        },\r\n        echo: (text)=>{\r\n            counter.setStatusTrue(0)\r\n            context.echo(text + '\\n');\r\n            context.echo('> The [[b;#ff3300;]echo] command prints back your arguments.');\r\n            context.echo('> Type [[b;#ff3300;]help] and check your first task is completed.');\r\n            context.echo('> Now type [[b;#ff3300;]pwd] to continue.');\r\n        },\r\n        pwd: function() {\r\n            counter.setStatusTrue(1)\r\n            var pwdvNew = pwdv.join(',').replace(',', '/').split();\r\n            context.echo(\"/home/\" + pwdvNew + '\\n');\r\n            context.echo('> Everything in Linux is a file. Every file is organized in a hierarchical directory tree.\\n' +\r\n                '> The first directory in the filesystem is aptly named the root directory.\\n' +\r\n                '> To see where you are, you can use the [[b;#ff3300;]pwd] command, this command means “print working directory”\\n' +\r\n                'and it just shows you which directory you are in.');\r\n            context.echo('> Now type [[b;#ff3300;]ls] to see the directories and files present in the current directory');\r\n        },\r\n        uname: () => {\r\n            counter.setStatusTrue(12)\r\n            let uname;\r\n            if (navigator.appVersion.indexOf(\"Win\") !== -1) uname = \"Windows\"; \r\n            if (navigator.appVersion.indexOf(\"Mac\") !== -1) uname = \"Mac\"; \r\n            if (navigator.appVersion.indexOf(\"X11\") !== -1) uname = \"UNIX\"; \r\n            if (navigator.appVersion.indexOf(\"Linux\") !== -1) uname = \"Linux\"; \r\n            context.echo(`${uname}\\n`);\r\n            context.echo('> The [[b;#ff3300;]uname] command prints the operating system of the current machine.\\n');\r\n            context.echo('> Now type [[b;#ff3300;]date] to get current date and time.');\r\n        },\r\n        date: () => {\r\n            counter.setStatusTrue(13)\r\n            context.echo(`${new Date()}\\n`);\r\n            context.echo('> The [[b;#ff3300;]date] command will display the date in the timezone on which the operating system was configured. You must be the super user to change date and time.');\r\n            context.echo('> Now type [[b;#ff3300;]ifconfig] to get interface configuration of the system.');\r\n        }\r\n    }\r\n}\r\n\r\nexport { basic }\r\n","import Files from '../lib/fs'\r\nlet file = new Files()\r\nlet fs =  (context,counter) =>{\r\n\r\n    return {\r\n        ls: () => {\r\n            context.echo(file.getPath())\r\n        },\r\n        cd: (arg) => {\r\n            context.echo(file.changeDir(arg))\r\n        },\r\n        mkdir: (arg)=>{\r\n            context.echo(file.mkdir(arg))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport {fs}","/**\r\n * Here we will create a dummy file system \r\n */\r\nimport _ from 'lodash'\r\nclass FileSystem{\r\n    constructor(){\r\n        this.path = '/'\r\n        this.fs = [\r\n            {\r\n                level: 0,\r\n                root: '/',\r\n                contents: ['Documents', 'Downloads']\r\n            }\r\n        ]\r\n        this.level = 0\r\n    }\r\n\r\n    getPath(){\r\n        let data =  _.find(this.fs, {level: this.level})\r\n        return data.contents\r\n    }\r\n\r\n    changeDir(dir){\r\n        \r\n        if(dir ==='..'){\r\n                 if(this.level===0)\r\n                 return \" You are in the root directory. \"\r\n                    else{\r\n                        this.level--;\r\n                        let dr = _.find(this.fs,{level: this.level})\r\n\r\n                        return `You are now in ${dr.root} directory`\r\n                    }\r\n        \r\n        }else{\r\n        \r\n        let dr = _.find(this.fs,{level: this.level})\r\n        if(!_.includes(dr.contents, dir) ){\r\n            return \"directoy not present\"\r\n        }\r\n        let d = {\r\n            level: this.level+1,\r\n            root: dir,\r\n            contents: []\r\n        }\r\n        this.level++\r\n    \r\n        \r\n        this.fs.push(d)\r\n        return d.contents}\r\n    }\r\n\r\n    mkdir(dir){\r\n        let currentDir = _.find(this.fs, {level:this.level})\r\n        if(!_.includes(currentDir.contents, dir))\r\n        {\r\n            currentDir.contents.push(dir)\r\n            return ` ${dir} directory successfully created in parent ${currentDir.root}`\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default FileSystem","\r\nclass counterService{\r\n    constructor(){\r\n            this.commandCounter = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];// Keeps track of different commands(i.e., if they are completed or not)\r\n            // 0 -> not completed\r\n            // 1 -> completed \r\n            // added 1 more position\r\n\r\n            this.commands = [\r\n            // FORMAT: commands, commandCounterIndex\r\n            'echo',//0\r\n            'pwd',//1\r\n            'ls',//2\r\n            'cd',//3\r\n            'cd ..',//4\r\n            'cd ~',//5\r\n            'cat',//6\r\n            'touch',//7\r\n            'cp',//8\r\n            'rm',//9\r\n            'mkdir',//10\r\n            'clear',//11\r\n            'uname',//12\r\n            'date',//13\r\n            'ifconfig',//14\r\n            'tty',//15\r\n            'history'//16\r\n            ];\r\n            //all the newly added commands must be updated in both the above arrays\r\n            // --------------------------------------------------------------------\r\n            this.taskStatus = ['[[b;#ff3300;]Not Completed]', \r\n            '[[b;#44D544;]Completed]'];  // To print the task status\r\n            // --------------------------------------------------------------------\r\n\r\n    }\r\n    getCounter(){\r\n    return this.commandCounter;\r\n                    }\r\n    getCommands(){\r\n    return this.commands;\r\n                    }\r\n    getStatus(index){\r\n    return this.taskStatus[this.commandCounter[index]]\r\n                        }\r\n    setStatusTrue(index){\r\n    this.commandCounter[index]=1\r\n    return this.taskStatus[this.commandCounter[index]]\r\n    }\r\n\r\n\r\n}\r\nexport default counterService;","import {basic} from './basic'\r\nimport {fs} from './files'\r\nimport counterService from './counter.service'\r\nconst commands = context => {\r\n    const counter = new counterService();\r\n    let b = basic(context,counter)\r\n    let f = fs(context,counter)\r\n    return {\r\n        ...b,\r\n        ...f\r\n    }\r\n}\r\n\r\nexport default commands","import React from 'react'\r\nimport $ from 'jquery'\r\n\r\nimport 'jquery.terminal'\r\nimport 'jquery.terminal/css/jquery.terminal.css'\r\nimport commands from '../commands'\r\nconst intro={\r\n        \r\n    // DANGER: high\r\n    // Don't mess with this part or else all HELL will fall loose.\r\n\r\n    prompt:\"[[b;#44D544;]imabp@localhost:~$] \",\r\n    greetings: \"All rights reserved to the owner © [[b;#FFFFFF;]imabp]\\n\\n\" +\r\n                \"This is part of project under [[b;#FFFF00;]Ninja Developers ] \\n We [[b;#FF0000;]❤]  Open Source \\n\"+\r\n               \"If you want to contribute, you can at github @imabp. \\n Type  [[b;#FFFFFF;]help] to get started \\n\" +\r\n               \"> The shell is basically a program that takes your commands from the keyboard and sends them to the operating system to perform.\\n\" +\r\n               \"> The [[b;#44D544;]Terminal] is a program that launches a shell for you.\\n\" +\r\n               \"> Type [[b;#ff3300;]help] to see the list of [[b;#44D544;]commands/tasks].\\n\\n\" +\r\n               '> Start with [[b;#ff3300;]echo \"any string\"].\\n',\r\n    onBlur: function() {\r\n        // prevent loosing focus\r\n        return false;\r\n    }       \r\n}\r\nexport default class Terminal extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.$el = $(this.el)\r\n        this.$el.terminal(commands(this.$el),intro)\r\n    }\r\n\r\n\r\n    render(){\r\n        return <div  style= {{display:'block',position:'absolute',width:'100%'}} ref={el => this.el = el} /> \r\n    }\r\n}","import React from 'react';\r\nimport Terminal from './components/terminal'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Terminal />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './css/style.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}